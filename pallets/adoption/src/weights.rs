
//! Autogenerated weights for `pallet_adoption`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2023-07-17, STEPS: `50`, REPEAT: `20`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `kali`, CPU: `Intel(R) Core(TM) i7-10870H CPU @ 2.20GHz`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("dev"), DB CACHE: 1024

// Executed Command:
// ./target/release/felidae-node
// benchmark
// pallet
// --chain
// dev
// --execution=wasm
// --wasm-execution=compiled
// --pallet
// pallet_adoption
// --extrinsic
// *
// --steps
// 50
// --repeat
// 20
// --output
// pallets/weights.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::Weight};
use sp_std::marker::PhantomData;

/// Weight functions needed for pallet_transaction.
pub trait WeightInfo {
	fn partner_registration() -> Weight;
	fn adoption_event_types_creation() -> Weight;
	fn adoption_event_creation() -> Weight;
	fn adoption_event_participant_addition() -> Weight;
	fn mint_event_participants() -> Weight;
	fn event_set_state() -> Weight;
}

/// Weight functions for `pallet_adoption`.
pub struct SubstrateWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {
	/// Storage: unknown `0x1430e34683b5b48a0c97e500a5a165f72c911a2cb79c751df931511feda20ad8` (r:1 w:1)
	/// Proof Skipped: unknown `0x1430e34683b5b48a0c97e500a5a165f72c911a2cb79c751df931511feda20ad8` (r:1 w:1)
	fn partner_registration() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `142`
		//  Estimated: `2617`
		// Minimum execution time: 23_563 nanoseconds.
		Weight::from_ref_time(24_380_000)
			.saturating_add(Weight::from_proof_size(2617))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: unknown `0x1430e34683b5b48a0c97e500a5a165f798c125134a739cb7922873ee53bf00cc` (r:1 w:1)
	/// Proof Skipped: unknown `0x1430e34683b5b48a0c97e500a5a165f798c125134a739cb7922873ee53bf00cc` (r:1 w:1)
	fn adoption_event_types_creation() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `142`
		//  Estimated: `2617`
		// Minimum execution time: 23_785 nanoseconds.
		Weight::from_ref_time(24_158_000)
			.saturating_add(Weight::from_proof_size(2617))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: unknown `0x1430e34683b5b48a0c97e500a5a165f715c34a63a703e4644e99614f3e6b6bc0` (r:1 w:1)
	/// Proof Skipped: unknown `0x1430e34683b5b48a0c97e500a5a165f715c34a63a703e4644e99614f3e6b6bc0` (r:1 w:1)
	/// Storage: unknown `0x1430e34683b5b48a0c97e500a5a165f72c911a2cb79c751df931511feda20ad8` (r:2 w:0)
	/// Proof Skipped: unknown `0x1430e34683b5b48a0c97e500a5a165f72c911a2cb79c751df931511feda20ad8` (r:2 w:0)
	/// Storage: unknown `0x1430e34683b5b48a0c97e500a5a165f798c125134a739cb7922873ee53bf00cc` (r:1 w:0)
	/// Proof Skipped: unknown `0x1430e34683b5b48a0c97e500a5a165f798c125134a739cb7922873ee53bf00cc` (r:1 w:0)
	fn adoption_event_creation() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `373`
		//  Estimated: `11019`
		// Minimum execution time: 35_374 nanoseconds.
		Weight::from_ref_time(35_990_000)
			.saturating_add(Weight::from_proof_size(11019))
			.saturating_add(T::DbWeight::get().reads(4))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: unknown `0x1430e34683b5b48a0c97e500a5a165f715c34a63a703e4644e99614f3e6b6bc0` (r:1 w:0)
	/// Proof Skipped: unknown `0x1430e34683b5b48a0c97e500a5a165f715c34a63a703e4644e99614f3e6b6bc0` (r:1 w:0)
	/// Storage: unknown `0x1430e34683b5b48a0c97e500a5a165f740a0d84818e3c74c10e5ab2aebc6c1c2` (r:1 w:1)
	/// Proof Skipped: unknown `0x1430e34683b5b48a0c97e500a5a165f740a0d84818e3c74c10e5ab2aebc6c1c2` (r:1 w:1)
	fn adoption_event_participant_addition() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `477`
		//  Estimated: `5904`
		// Minimum execution time: 31_450 nanoseconds.
		Weight::from_ref_time(31_836_000)
			.saturating_add(Weight::from_proof_size(5904))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: unknown `0x1430e34683b5b48a0c97e500a5a165f715c34a63a703e4644e99614f3e6b6bc0` (r:1 w:0)
	/// Proof Skipped: unknown `0x1430e34683b5b48a0c97e500a5a165f715c34a63a703e4644e99614f3e6b6bc0` (r:1 w:0)
	/// Storage: unknown `0x1430e34683b5b48a0c97e500a5a165f740a0d84818e3c74c10e5ab2aebc6c1c2` (r:2 w:1)
	/// Proof Skipped: unknown `0x1430e34683b5b48a0c97e500a5a165f740a0d84818e3c74c10e5ab2aebc6c1c2` (r:2 w:1)
	/// Storage: System Account (r:1 w:1)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	fn mint_event_participants() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `645`
		//  Estimated: `11318`
		// Minimum execution time: 74_895 nanoseconds.
		Weight::from_ref_time(75_742_000)
			.saturating_add(Weight::from_proof_size(11318))
			.saturating_add(T::DbWeight::get().reads(4))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	/// Storage: unknown `0x1430e34683b5b48a0c97e500a5a165f715c34a63a703e4644e99614f3e6b6bc0` (r:1 w:1)
	/// Proof Skipped: unknown `0x1430e34683b5b48a0c97e500a5a165f715c34a63a703e4644e99614f3e6b6bc0` (r:1 w:1)
	fn event_set_state() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `477`
		//  Estimated: `2952`
		// Minimum execution time: 27_492 nanoseconds.
		Weight::from_ref_time(29_314_000)
			.saturating_add(Weight::from_proof_size(2952))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
}
